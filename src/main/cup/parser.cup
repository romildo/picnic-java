package parse;

import absyn.*;


terminal String LITINT;
terminal String ID;
terminal        PLUS;
terminal        EQ, LT;
terminal        LPAREN, RPAREN, COMMA;
terminal        BOOL, INT;
terminal        IF, THEN, ELSE;
terminal        LET, IN;

non terminal     program;
non terminal Exp exp;
non terminal     exps;
non terminal     typeid;
non terminal     typeids;
non terminal     fun;
non terminal     funs;

precedence nonassoc LT;
precedence left     PLUS;

start with exp;

program ::=
  funs
;

exp ::=
  LITINT:cte                       {: RESULT = new ExpNum(cte); :}
//| ID
//| exp PLUS exp
//| exp LT exp
//| LET ID EQ exp IN exp
| IF exp:t THEN exp:a ELSE exp:b   {: RESULT = new ExpIf(t, a, b); :}
//| ID LPAREN exps RPAREN
;

exps ::=
  exp
| exp COMMA exps
;
        
fun ::=
  typeid LPAREN typeids RPAREN EQ exp
;

typeid ::=
  INT ID
| BOOL ID
;

typeids ::=
  typeid
| typeid COMMA typeids
;

funs ::=
  fun
| fun funs
;
